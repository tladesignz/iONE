--- env.c	2018-01-24 12:47:05.000000000 +0100
+++ env.c.patched	2018-01-24 12:48:16.000000000 +0100
@@ -17,13 +17,20 @@
 #include "libcork/helpers/errors.h"
 
 #if defined(__APPLE__)
-/* Apple doesn't provide access to the "environ" variable from a shared library.
- * There's a workaround function to grab the environ pointer described at [1].
- *
- * [1] http://developer.apple.com/library/mac/#documentation/Darwin/Reference/ManPages/man7/environ.7.html
- */
-#include <crt_externs.h>
-#define environ  (*_NSGetEnviron())
+
+#include <TargetConditionals.h>
+
+#if TARGET_OS_IPHONE
+    #define NO_ENVIRON 1
+#else
+    /* Apple doesn't provide access to the "environ" variable from a shared library.
+     * There's a workaround function to grab the environ pointer described at [1].
+     *
+     * [1] http://developer.apple.com/library/mac/#documentation/Darwin/Reference/ManPages/man7/environ.7.html
+     */
+    #include <crt_externs.h>
+    #define environ  (*_NSGetEnviron())
+#endif
 
 #else
 /* On all other POSIX platforms, we assume that environ is available in shared
@@ -93,6 +100,9 @@
 struct cork_env *
 cork_env_clone_current(void)
 {
+#ifdef NO_ENVIRON
+    return NULL;
+#else
     char  **curr;
     struct cork_env  *env = cork_env_new();
 
@@ -113,6 +123,7 @@
     }
 
     return env;
+#endif
 }
 
 
@@ -183,7 +194,7 @@
     return CORK_HASH_TABLE_MAP_CONTINUE;
 }
 
-#if (defined(__APPLE__) || (defined(BSD) && (BSD >= 199103))) && !defined(__GNU__) || (defined(__CYGWIN__))
+#if defined(__APPLE__) || (defined(BSD) && (BSD >= 199103))
 /* A handful of platforms [1] don't provide clearenv(), so we must implement our
  * own version that clears the environ array directly.
  *
@@ -192,7 +203,9 @@
 static void
 clearenv(void)
 {
+#ifndef NO_ENVIRON
     *environ = NULL;
+#endif
 }
 
 #else
